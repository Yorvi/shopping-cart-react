{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","_ref","totalCounters","react_default","a","createElement","className","href","Counter","prevProps","prevState","console","log","counter","value","this","props","_this","itemName","getBadgeClasses","formatCount","onClick","onIncrement","getIncrementClasses","onReduce","getReduceClasses","onDelete","id","formatStock","classes","stock","Component","Counters","onReset","counters","map","components_counter","key","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","price","handleDelete","counterId","filter","c","setState","handleReset","handleIncrement","toConsumableArray","index","indexOf","objectSpread","handleReduce","Fragment","navbar","length","components_counters","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e69bbab3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NavBar = ({ totalCounters }) => {\r\n  return ( \r\n    <nav className=\"navbar navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"#\">\r\n        React Shopping Cart <span className=\"badge-pill badge-secondary\">{totalCounters}</span>\r\n      </a>\r\n    </nav>\r\n  );\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"Previous Props\", prevProps);\r\n    console.log(\"Previous State\", prevState);\r\n    if (prevProps.counter.value !== this.props.counter.value) {\r\n      // AJAX calls and get new data from server\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"App - Unmounted\");\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Counter - Rendered\");\r\n\r\n    return (\r\n      <div className=\"m-2 counter\">\r\n        <div>\r\n          <strong>{this.props.itemName}</strong>\r\n        </div>\r\n\r\n        <div className=\"my-badge\">\r\n          <span className={this.getBadgeClasses()}>\r\n            {this.formatCount()}\r\n          </span>\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => this.props.onIncrement(this.props.counter)}\r\n          className={this.getIncrementClasses()}\r\n        >\r\n          +\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => this.props.onReduce(this.props.counter)}\r\n          className={this.getReduceClasses()}\r\n        >\r\n          -\r\n        </button>\r\n\r\n        <button\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n        >\r\n          Delete\r\n        </button>\r\n        <br />\r\n        <small>Available: {this.formatStock()}</small>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getIncrementClasses() {\r\n    let classes = \"btn btn-sm m-1 increment btn-\";\r\n    classes +=\r\n      this.props.counter.stock === this.props.counter.value\r\n        ? \"dark\"\r\n        : \"secondary\";\r\n    return classes;\r\n  }\r\n\r\n  getReduceClasses() {\r\n    let classes = \"btn btn-sm m-1 reduce btn-\";\r\n    classes += this.props.counter.value === 0 ? \"dark\" : \"secondary\";\r\n    return classes;\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"badge badge-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    let { value } = this.props.counter;\r\n\r\n    return this.props.counter.value === 0 ? \"Zero\" : this.props.counter.value;\r\n  }\r\n\r\n  formatStock() {\r\n    let { value } = this.props.counter;\r\n    let { stock } = this.props.counter;\r\n\r\n    return this.props.counter.stock - this.props.counter.value;\r\n  }\r\n}\r\n \r\nexport default Counter;","import React, { Component } from 'react'\r\nimport Counter from './counter';\r\n\r\nclass Counters extends Component {\r\n\r\n  render() {\r\n    console.log(\"Counters - Rendered\");\r\n\r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={this.props.onReset}\r\n          className=\"btn btn-primary btn-sm m-2\">\r\n            Reset\r\n        </button>\r\n\r\n        {this.props.counters.map(counter => (\r\n          <Counter\r\n            key={counter.id}\r\n            counter={counter}\r\n            itemName={counter.itemName}\r\n            stock={counter.stock}\r\n            onDelete={this.props.onDelete}\r\n            onIncrement={this.props.onIncrement}\r\n            onReduce={this.props.onReduce}\r\n          />\r\n        ))}\r\n\r\n        <div />\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n \r\nexport default Counters;","import React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport Counters from './components/counters'\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, itemName: 'Football Helmet', stock: 10, value: 0, price: 49.99 },\n      { id: 2, itemName: 'Soccer Jersey', stock: 12, value: 0, price: 64.99 },\n      { id: 3, itemName: 'Baseball Cap', stock: 10, value: 0, price: 29.99 },\n      { id: 4, itemName: 'Baseball Glove', stock: 7, value: 0, price: 149.99 },\n      { id: 5, itemName: 'Basketball', stock: 15, value: 0, price: 19.99 }\n    ]\n  };\n\n  constructor(props) {\n    super(props);\n    console.log(\"App - Constructor\");\n  }\n\n  componentDidMount() {\n    console.log(\"App - Mounted\");\n  }\n\n  handleDelete = counterId => {\n    let counters = this.state.counters.filter(c => c.id !== counterId);\n\n    this.setState({ counters: counters });\n  };\n\n  handleReset = () => {\n    let counters = this.state.counters.map(c => {\n      c.value = 0;\n      return c;\n    });\n\n    this.setState({ counters: counters });\n  };\n\n  handleIncrement = counter => {\n    let counters = [...this.state.counters];\n    let index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n\n    if(counters[index].value == counters[index].stock) {\n\n    } else {\n      counters[index].value++;\n\n    }\n\n    this.setState({ counters: counters });\n  };\n\n\n  handleReduce = counter => {\n    let counters = [...this.state.counters];\n    let index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    if (counters[index].value === 0){\n\n    } else {\n      counters[index].value--;\n    }\n\n    this.setState({ counters: counters });\n  };\n\n  render() {\n    console.log(\"App - Rendered\");\n    return (\n      <React.Fragment>\n        <NavBar\n          totalCounters={this.state.counters.filter(c => c.value > 0).length}\n        />\n        <main className=\"container\">\n          <Counters\n            counters={this.state.counters}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n            onReduce={this.handleReduce}\n            onDelete={this.handleDelete}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'; \n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}